// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace AdminAppUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Open user and modify his city
        /// </summary>
        public void EditUser()
        {
            #region Variable Declarations
            WinTitleBar uIMainWindowTitleBar = this.UIMainWindowWindow.UIMainWindowTitleBar;
            WpfButton uIUžívateliaButton = this.UIMainWindowWindow1.UIUžívateliaButton;
            WpfText uIVyskocanyText = this.UIMainWindowWindow1.UIFramePane.UIClientSelectTable.UIVyskocanyMatoRow.UIVyskocanyCell.UIVyskocanyText;
            WinWindow uIMainWindowWindow = this.UIMainWindowWindow;
            WpfButton uIUpraviťButton = this.UIMainWindowWindow1.UIFramePane.UIUpraviťButton;
            WpfEdit uICityEdit = this.UIMainWindowWindow1.UICityEdit;
            WpfButton uIUložiťButton = this.UIMainWindowWindow1.UIUložiťButton;
            WpfButton uIZatvoriťButton = this.UIMainWindowWindow1.UIZatvoriťButton;
            #endregion

            // Click 'MainWindow' title bar
            Mouse.Click(uIMainWindowTitleBar, new Point(159, 20));

            // Click 'Užívatelia' button
            Mouse.Click(uIUžívateliaButton, new Point(96, 13));

            // Click 'Vyskocany' label
            Mouse.Click(uIVyskocanyText, new Point(34, 14));

            // Click 'Upraviť' button
            Mouse.Click(uIUpraviťButton, new Point(29, 28));

            // Type 'Brrrr' in 'City' text box
            uICityEdit.Text = this.EditUserParams.UICityEditText;

            // Click 'Uložiť' button
            Mouse.Click(uIUložiťButton, new Point(77, 17));

            // Click 'Zatvoriť' button
            Mouse.Click(uIZatvoriťButton, new Point(82, 17));
        }
        
        /// <summary>
        /// Open menu for today and create one
        /// </summary>
        public void CreateMenu()
        {
            #region Variable Declarations
            WpfButton uIJedálnylístokButton = this.UIMainWindowWindow1.UIJedálnylístokButton;
            WpfButton uIPridaťButton = this.UIMainWindowWindow1.UIFramePane.UIPridaťButton;
            WpfComboBox uIDesertsComboComboBox = this.UIMainWindowWindow1.UIDesertsComboComboBox;
            WpfComboBox uISoupsComboComboBox = this.UIMainWindowWindow1.UISoupsComboComboBox;
            WpfEdit uIPriceEdit = this.UIMainWindowWindow1.UIPriceEdit;
            WpfButton uIUložiťButton = this.UIMainWindowWindow1.UIUložiťButton;
            WpfButton uIZatvoriťButton = this.UIMainWindowWindow1.UIZatvoriťButton;
            #endregion

            // Click 'Jedálny lístok' button
            Mouse.Click(uIJedálnylístokButton, new Point(111, 7));

            // Click 'Pridať' button
            Mouse.Click(uIPridaťButton, new Point(32, 25));

            // Select 'Zmrzlina: Čučoriedková' in 'desertsCombo' combo box
            uIDesertsComboComboBox.SelectedItem = this.CreateMenuParams.UIDesertsComboComboBoxSelectedItem;

            // Select 'Brokolicová: Zelena' in 'soupsCombo' combo box
            uISoupsComboComboBox.SelectedItem = this.CreateMenuParams.UISoupsComboComboBoxSelectedItem;

            // Type '5' in 'price' text box
            uIPriceEdit.Text = this.CreateMenuParams.UIPriceEditText;

            // Click 'Uložiť' button
            Mouse.Click(uIUložiťButton, new Point(54, 7));

            // Click 'Zatvoriť' button
            Mouse.Click(uIZatvoriťButton, new Point(92, 12));
        }
        
        /// <summary>
        /// Creat new meal
        /// </summary>
public void CreateMeal(string mealName, string descrtiption)
{
    #region Variable Declarations
    WpfButton uIHljedláButton = this.UIMainWindowWindow1.UIHljedláButton;
    WpfButton uIPridaťButton = this.UIMainWindowWindow1.UIFramePane.UIPridaťButton;
    WpfEdit uIItemNameEdit = this.UIMainWindowWindow1.UIItemNameEdit;
    WpfEdit uIDescriptionEdit = this.UIMainWindowWindow1.UIDescriptionEdit;
    WpfButton uIUložiťButton = this.UIMainWindowWindow1.UIUložiťButton;
    WpfButton uIZatvoriťButton = this.UIMainWindowWindow1.UIZatvoriťButton;
    #endregion

    // Click 'Hl. jedlá' button
    Mouse.Click(uIHljedláButton, new Point(105, 16));

    // Click 'Pridať' button
    Mouse.Click(uIPridaťButton, new Point(38, 23));

    // Type 'Testovaci' in 'ItemName' text box
    uIItemNameEdit.Text = mealName;

    // Type '{Tab}' in 'ItemName' text box
    Keyboard.SendKeys(uIItemNameEdit, this.CreateMealParams.UIItemNameEditSendKeys, ModifierKeys.None);

    // Type 'Opis testovacieho jedla' in 'Description' text box
    uIDescriptionEdit.Text = descrtiption;

    // Click 'Uložiť' button
    Mouse.Click(uIUložiťButton, new Point(75, 13));

    // Click 'Zatvoriť' button
    Mouse.Click(uIZatvoriťButton, new Point(114, 23));
}
        
        #region Properties
        public virtual EditUserParams EditUserParams
        {
            get
            {
                if ((this.mEditUserParams == null))
                {
                    this.mEditUserParams = new EditUserParams();
                }
                return this.mEditUserParams;
            }
        }
        
        public virtual CreateMenuParams CreateMenuParams
        {
            get
            {
                if ((this.mCreateMenuParams == null))
                {
                    this.mCreateMenuParams = new CreateMenuParams();
                }
                return this.mCreateMenuParams;
            }
        }
        
        public virtual CreateMealParams CreateMealParams
        {
            get
            {
                if ((this.mCreateMealParams == null))
                {
                    this.mCreateMealParams = new CreateMealParams();
                }
                return this.mCreateMealParams;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private EditUserParams mEditUserParams;
        
        private CreateMenuParams mCreateMenuParams;
        
        private CreateMealParams mCreateMealParams;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditUser'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EditUserParams
    {
        
        #region Fields
        /// <summary>
        /// Maximize window 'MainWindow'
        /// </summary>
        public bool UIMainWindowWindowMaximized = true;
        
        /// <summary>
        /// Type 'Brrrr' in 'City' text box
        /// </summary>
        public string UICityEditText = "Brrrr";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateMenu'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CreateMenuParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Zmrzlina: Čučoriedková' in 'desertsCombo' combo box
        /// </summary>
        public string UIDesertsComboComboBoxSelectedItem = "Zmrzlina: Čučoriedková";
        
        /// <summary>
        /// Select 'Brokolicová: Zelena' in 'soupsCombo' combo box
        /// </summary>
        public string UISoupsComboComboBoxSelectedItem = "Brokolicová: Zelena";
        
        /// <summary>
        /// Type '5' in 'price' text box
        /// </summary>
        public string UIPriceEditText = "5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateMeal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CreateMealParams
    {
        
        #region Fields
        
        /// <summary>
        /// Type '{Tab}' in 'ItemName' text box
        /// </summary>
        public string UIItemNameEditSendKeys = "{Tab}";
        
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow : WinWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WinTitleBar UIMainWindowTitleBar
        {
            get
            {
                if ((this.mUIMainWindowTitleBar == null))
                {
                    this.mUIMainWindowTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIMainWindowTitleBar.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIMainWindowTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private WinTitleBar mUIMainWindowTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainWindowWindow1 : WpfWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIUžívateliaButton
        {
            get
            {
                if ((this.mUIUžívateliaButton == null))
                {
                    this.mUIUžívateliaButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIUžívateliaButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Client";
                    this.mUIUžívateliaButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIUžívateliaButton;
            }
        }
        
        public UIFramePane UIFramePane
        {
            get
            {
                if ((this.mUIFramePane == null))
                {
                    this.mUIFramePane = new UIFramePane(this);
                }
                return this.mUIFramePane;
            }
        }
        
        public WpfEdit UICityEdit
        {
            get
            {
                if ((this.mUICityEdit == null))
                {
                    this.mUICityEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUICityEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "City";
                    this.mUICityEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICityEdit;
            }
        }
        
        public WpfButton UIUložiťButton
        {
            get
            {
                if ((this.mUIUložiťButton == null))
                {
                    this.mUIUložiťButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIUložiťButton.SearchProperties[WpfButton.PropertyNames.Name] = "Uložiť";
                    this.mUIUložiťButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIUložiťButton;
            }
        }
        
        public WpfButton UIZatvoriťButton
        {
            get
            {
                if ((this.mUIZatvoriťButton == null))
                {
                    this.mUIZatvoriťButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIZatvoriťButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Close";
                    this.mUIZatvoriťButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIZatvoriťButton;
            }
        }
        
        public WpfButton UIJedálnylístokButton
        {
            get
            {
                if ((this.mUIJedálnylístokButton == null))
                {
                    this.mUIJedálnylístokButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIJedálnylístokButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Menu";
                    this.mUIJedálnylístokButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIJedálnylístokButton;
            }
        }
        
        public WpfComboBox UIDesertsComboComboBox
        {
            get
            {
                if ((this.mUIDesertsComboComboBox == null))
                {
                    this.mUIDesertsComboComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIDesertsComboComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "desertsCombo";
                    this.mUIDesertsComboComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDesertsComboComboBox;
            }
        }
        
        public WpfComboBox UISoupsComboComboBox
        {
            get
            {
                if ((this.mUISoupsComboComboBox == null))
                {
                    this.mUISoupsComboComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUISoupsComboComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "soupsCombo";
                    this.mUISoupsComboComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISoupsComboComboBox;
            }
        }
        
        public WpfEdit UIPriceEdit
        {
            get
            {
                if ((this.mUIPriceEdit == null))
                {
                    this.mUIPriceEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPriceEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "price";
                    this.mUIPriceEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPriceEdit;
            }
        }
        
        public WpfButton UIHljedláButton
        {
            get
            {
                if ((this.mUIHljedláButton == null))
                {
                    this.mUIHljedláButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIHljedláButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Meals";
                    this.mUIHljedláButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIHljedláButton;
            }
        }
        
        public WpfEdit UIItemNameEdit
        {
            get
            {
                if ((this.mUIItemNameEdit == null))
                {
                    this.mUIItemNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ItemName";
                    this.mUIItemNameEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemNameEdit;
            }
        }
        
        public WpfEdit UIDescriptionEdit
        {
            get
            {
                if ((this.mUIDescriptionEdit == null))
                {
                    this.mUIDescriptionEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIDescriptionEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Description";
                    this.mUIDescriptionEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDescriptionEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIUžívateliaButton;
        
        private UIFramePane mUIFramePane;
        
        private WpfEdit mUICityEdit;
        
        private WpfButton mUIUložiťButton;
        
        private WpfButton mUIZatvoriťButton;
        
        private WpfButton mUIJedálnylístokButton;
        
        private WpfComboBox mUIDesertsComboComboBox;
        
        private WpfComboBox mUISoupsComboComboBox;
        
        private WpfEdit mUIPriceEdit;
        
        private WpfButton mUIHljedláButton;
        
        private WpfEdit mUIItemNameEdit;
        
        private WpfEdit mUIDescriptionEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFramePane : WpfPane
    {
        
        public UIFramePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.Frame";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "frame";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIClientSelectTable UIClientSelectTable
        {
            get
            {
                if ((this.mUIClientSelectTable == null))
                {
                    this.mUIClientSelectTable = new UIClientSelectTable(this);
                }
                return this.mUIClientSelectTable;
            }
        }
        
        public WpfButton UIUpraviťButton
        {
            get
            {
                if ((this.mUIUpraviťButton == null))
                {
                    this.mUIUpraviťButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIUpraviťButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Upraviť";
                    this.mUIUpraviťButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIUpraviťButton;
            }
        }
        
        public WpfButton UIPridaťButton
        {
            get
            {
                if ((this.mUIPridaťButton == null))
                {
                    this.mUIPridaťButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPridaťButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Pridať";
                    this.mUIPridaťButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPridaťButton;
            }
        }
        #endregion
        
        #region Fields
        private UIClientSelectTable mUIClientSelectTable;
        
        private WpfButton mUIUpraviťButton;
        
        private WpfButton mUIPridaťButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIClientSelectTable : WpfTable
    {
        
        public UIClientSelectTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "clientSelect";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIVyskocanyMatoRow UIVyskocanyMatoRow
        {
            get
            {
                if ((this.mUIVyskocanyMatoRow == null))
                {
                    this.mUIVyskocanyMatoRow = new UIVyskocanyMatoRow(this);
                }
                return this.mUIVyskocanyMatoRow;
            }
        }
        #endregion
        
        #region Fields
        private UIVyskocanyMatoRow mUIVyskocanyMatoRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVyskocanyMatoRow : WpfRow
    {
        
        public UIVyskocanyMatoRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Vyskocany Mato";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIVyskocanyCell UIVyskocanyCell
        {
            get
            {
                if ((this.mUIVyskocanyCell == null))
                {
                    this.mUIVyskocanyCell = new UIVyskocanyCell(this);
                }
                return this.mUIVyskocanyCell;
            }
        }
        #endregion
        
        #region Fields
        private UIVyskocanyCell mUIVyskocanyCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVyskocanyCell : WpfCell
    {
        
        public UIVyskocanyCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Priezvisko";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIVyskocanyText
        {
            get
            {
                if ((this.mUIVyskocanyText == null))
                {
                    this.mUIVyskocanyText = new WpfText(this);
                    #region Search Criteria
                    this.mUIVyskocanyText.SearchProperties[WpfText.PropertyNames.Name] = "Vyskocany";
                    this.mUIVyskocanyText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIVyskocanyText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIVyskocanyText;
        #endregion
    }
}
